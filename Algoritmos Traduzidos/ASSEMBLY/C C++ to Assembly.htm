<!DOCTYPE html>
<!-- saved from url=(0023)http://assembly.ynh.io/ -->
<html class=" js flexbox canvas canvastext webgl no-touch geolocation postmessage websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<title>C/C++ to Assembly</title>
<meta name="google-site-verification" content="C164UmRgMOvnnv9nmdz9twIKqcWq_hJDTTd1KUmMZxU">
<meta name="description" content="">
<meta name="viewport" content="width=device-width">
<style>
            body {
                padding-top: 60px;
                padding-bottom: 40px;
            }
</style>
<link rel="stylesheet" href="http://assembly.ynh.io/stylesheets/bootstrap.min.css">
<script type="text/javascript" async="" src="./C C++ to Assembly_files/ga.js"></script><script type="text/javascript" src="./C C++ to Assembly_files/modernizr-2.6.1-respond-1.1.0.min.js"></script><style type="text/css"></style>
<link rel="stylesheet" href="http://assembly.ynh.io/stylesheets/sh_style.css">
<link rel="stylesheet" href="http://assembly.ynh.io/stylesheets/style.css">
</head>
<body>
<!--[if lt IE 7]>
            <p class="chromeframe">You are using an outdated browser. <a href="http://browsehappy.com/">Upgrade your browser today</a> or <a href="http://www.google.com/chromeframe/?redirect=true">install Google Chrome Frame</a> to better experience this site.</p>
        <![endif]-->
<!-- This code is taken from http://twitter.github.com/bootstrap/examples/hero.html -->
<div class="container">
    <!-- Main hero unit for a primary marketing message or call to action -->
    <div class="hero-unit" id="main">
        <h1>C/C++ to Assembly v2</h1>
        <p>
            Just paste your C or C++ code and see how each line is translated in to assembly by gcc (GNU Compiler Collection). Hover over a C/C++ code block to see how it is mapped to assembly code. 
        </p>
        <p>
            The source code is available on <a href="https://github.com/ynh/cpp-to-assembly">GitHub</a>
             <iframe style="margin-top: 0px; margin-bottom: -3px; margin-left: 12px;" class="github-btn" src="./C C++ to Assembly_files/github-btn.htm" allowtransparency="true" frameborder="0" scrolling="0" width="100px" height="20px"></iframe>
    
        </p>
        <p>
            Discuss on <a href="http://news.ycombinator.com/item?id=4560410">Hacker News</a> or  <a href="http://www.reddit.com/r/programming/comments/10c4nh/online_cc_to_assembly_visualizer_weekend_project/">Reddit</a>
        
        </p>
        
        <pre id="error" style="display: none;" class="alert alert-error"></pre>
        <form method="post">
          
            <h4 style="float:left">Paste your own code or</h4>  <div class="btn-group" style="float:left">
                <button class="btn dropdown-toggle" data-toggle="dropdown" id="loadcode" autocomplete="off">Load sample code <span class="caret"></span></button>
                <ul class="dropdown-menu" id="fileselect">
                  <li><a href="http://assembly.ynh.io/#" data-programm="helloworld" data-lang="c">Hello World C programm</a></li>
                  <li><a href="http://assembly.ynh.io/#" data-programm="bubble" data-lang="c">C Bubble sort</a></li>
                  <li><a href="http://assembly.ynh.io/#" data-programm="loop" data-lang="c">Simple loop</a></li>
                  <li><a href="http://assembly.ynh.io/#" data-programm="switch" data-lang="c">Switch</a></li>
                </ul>
              </div>
            <textarea name="ccode" id="ccode" style="height: 500px;width: 100%"></textarea>
            <label class="radio">
            <input type="radio" name="language" id="lang_c" value="c" checked="checked">
            GNU GCC C </label>
            <label class="radio">
            <input type="radio" name="language" id="lang_cpp" value="cpp">GNU GCC C++ </label>
            <label class="checkbox">
            <input type="checkbox" value="1" name="optimize"> Optimize (-O) works only with simple code</label>
            <input type="checkbox" value="1" name="arm"> Use ARM
        </form>
        <button id="compile" class="btn btn-primary btn-large" data-loading-text="Code is compiling..." autocomplete="off">Translate Code to Assembly</button>
    </div>
    <div id="code" class="row"><h2>Code Comparison</h2><div class="span5" style="overflow: auto; height: 567px;"><pre id="code0" class="sh_cpp code0 sh_sourceCode"><span class="sh_preproc">#include</span> <span class="sh_string">&lt;stdio.h&gt;</span></pre><pre id="code1" class="sh_cpp code1 sh_sourceCode"><span class="sh_preproc">#include</span> <span class="sh_string">&lt;stdlib.h&gt;</span></pre><pre id="code2" class="sh_cpp code2 sh_sourceCode"></pre><pre id="code3" class="sh_cpp code3 sh_sourceCode"><span class="sh_type">int</span> <span class="sh_function">main</span><span class="sh_symbol">(</span><span class="sh_type">void</span><span class="sh_symbol">)</span> <span class="sh_cbracket">{</span></pre><pre id="code4" class="sh_cpp code4 sh_sourceCode">	<span class="sh_function">puts</span><span class="sh_symbol">(</span><span class="sh_string">"!!!Hello World!!!"</span><span class="sh_symbol">);</span> <span class="sh_comment">/* prints !!!Hello World!!! */</span></pre><pre id="code5" class="sh_cpp code5 sh_sourceCode">	<span class="sh_keyword">return</span> EXIT_SUCCESS<span class="sh_symbol">;</span></pre><pre id="code6" class="sh_cpp code6 sh_sourceCode"><span class="sh_cbracket">}</span></pre><pre id="code7" class="sh_cpp code7 sh_sourceCode"></pre></div><div class="span6 offset1" style="overflow: auto; height: 567px;"><pre class="sh_asm link0 sh_sourceCode">             	<span class="sh_type">.Ltext0:</span>
             <span class="sh_function">		</span><span class="sh_type">.cfi_sections</span>	<span class="sh_type">.debug_frame</span>
             <span class="sh_function">		</span><span class="sh_type">.align</span>	<span class="sh_comment">2</span>
             <span class="sh_function">		</span><span class="sh_type">.global</span>	main
             <span class="sh_function">		</span><span class="sh_type">.thumb</span>
             <span class="sh_function">		</span><span class="sh_type">.thumb_func</span>
             	main:
             <span class="sh_function">		</span><span class="sh_type">.fnstart</span>
</pre><pre class="sh_asm link0 sh_sourceCode">             	<span class="sh_type">.LFB43:</span>
</pre><pre class="sh_asm link4 sh_sourceCode">             <span class="sh_function">		</span><span class="sh_type">.cfi_startproc</span>
             <span class="sh_function">		@</span> args = <span class="sh_comment">0</span>, preten<span class="sh_comment">d</span> = <span class="sh_comment">0</span>, fram<span class="sh_comment">e</span> = <span class="sh_comment">0</span>
             <span class="sh_function">		@</span> frame_n<span class="sh_comment">eeded</span> = <span class="sh_comment">0</span>, uses_anonymous_args = <span class="sh_comment">0</span>
<span class="sh_comment">0000</span> <span class="sh_comment">08B5</span>     <span class="sh_function">		push	{r3,</span> lr<span class="sh_cbracket">}</span>
             <span class="sh_function">		</span><span class="sh_type">.save</span> <span class="sh_cbracket">{</span>r<span class="sh_comment">3</span>, lr<span class="sh_cbracket">}</span>
</pre><pre class="sh_asm link0 sh_sourceCode">             	<span class="sh_type">.LCFI0:</span>
</pre><pre class="sh_asm link4 sh_sourceCode">             <span class="sh_function">		</span><span class="sh_type">.cfi_def_cfa_offset</span> <span class="sh_comment">8</span>
             <span class="sh_function">		</span><span class="sh_type">.cfi_offset</span> <span class="sh_comment">14</span>, <span class="sh_number">-4</span>
             <span class="sh_function">		</span><span class="sh_type">.cfi_offset</span> <span class="sh_comment">3</span>, <span class="sh_number">-8</span>
</pre><pre class="sh_asm link5 sh_sourceCode"><span class="sh_comment">0002</span> <span class="sh_comment">40F20000</span> <span class="sh_function">		movw	r0,</span> <span class="sh_keyword">#:</span>lower<span class="sh_comment">16</span>:<span class="sh_type">.LC0</span>
<span class="sh_comment">0006</span> <span class="sh_comment">C0F20000</span> <span class="sh_function">		movt	r0,</span> <span class="sh_keyword">#:</span>upper<span class="sh_comment">16</span>:<span class="sh_type">.LC0</span>
<span class="sh_comment">000a</span> <span class="sh_comment">FFF7FEFF</span> <span class="sh_function">		bl	puts</span>
</pre><pre class="sh_asm link7 sh_sourceCode"><span class="sh_comment">000e</span> <span class="sh_comment">4FF00000</span> <span class="sh_function">		mov	r0,</span> #<span class="sh_comment">0</span>
<span class="sh_comment">0012</span> <span class="sh_comment">08BD</span>     <span class="sh_function">		pop	{r3,</span> p<span class="sh_comment">c</span><span class="sh_cbracket">}</span>
             <span class="sh_function">		</span><span class="sh_type">.cfi_endproc</span>
</pre><pre class="sh_asm link0 sh_sourceCode">             	<span class="sh_type">.LFE43:</span>
</pre><pre class="sh_asm link7 sh_sourceCode">             <span class="sh_function">		</span><span class="sh_type">.fnend</span>
             <span class="sh_function">		</span><span class="sh_type">.section</span>	<span class="sh_type">.rodata.str1.4,"aMS",%progbits,1</span>
             <span class="sh_function">		</span><span class="sh_type">.align</span>	<span class="sh_comment">2</span>
</pre><pre class="sh_asm link0 sh_sourceCode">             	<span class="sh_type">.LC0:</span>
</pre><pre class="sh_asm link7 sh_sourceCode"><span class="sh_comment">0000</span> <span class="sh_comment">21212148</span> <span class="sh_function">		</span><span class="sh_type">.ascii</span>	<span class="sh_string">"!!!Hello World!!!\000"</span>
     <span class="sh_comment">656C6C6F</span> 
     <span class="sh_comment">20576F72</span> 
     <span class="sh_comment">6C642121</span> 
     <span class="sh_comment">2100</span>
<span class="sh_comment">0012</span> <span class="sh_comment">0000</span>     <span class="sh_function">		</span><span class="sh_type">.text</span>
</pre><pre class="sh_asm link0 sh_sourceCode">             	<span class="sh_type">.Letext0:</span>
</pre></div></div>
    <hr>
    <footer>
    <p>
        © ynh - Powered by Node.js
    </p>
    </footer>
</div>
<!-- /container -->
<script src="./C C++ to Assembly_files/jquery.min.js"></script>
<script>window.jQuery || document.write('<script src="javascripts/vendor/jquery.js"><\/script>')</script>
<script src="./C C++ to Assembly_files/bootstrap.min.js"></script>
<script type="text/javascript" src="./C C++ to Assembly_files/raphael-min.js"></script>
<script type="text/javascript" src="./C C++ to Assembly_files/app.js"></script>
<script type="text/javascript" src="./C C++ to Assembly_files/sh_main.min.js"></script>
<script type="text/javascript" src="./C C++ to Assembly_files/sh_cpp.min.js"></script>
<script type="text/javascript" src="./C C++ to Assembly_files/sh_asm.js"></script>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-35023199-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>


</body></html>